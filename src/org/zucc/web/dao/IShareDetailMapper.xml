<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.zucc.web.dao.IShareDetailMapper" >
  <resultMap id="BaseResultMap" type="org.zucc.web.entity.IShareDetail" >
    <id column="share_detail_id" property="shareDetailId" jdbcType="BIGINT" />
    <result column="share_useId" property="shareUseid" jdbcType="BIGINT" />
    <result column="share_courseId" property="shareCourseid" jdbcType="BIGINT" />
    <result column="share_enroll_id" property="shareEnrollId" jdbcType="BIGINT" />
    <result column="share_createTime" property="shareCreatetime" jdbcType="TIMESTAMP" />
    <result column="share_money_state" property="shareMoneyState" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    share_detail_id, share_useId, share_courseId, share_enroll_id, share_createTime, 
    share_money_state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.zucc.web.entity.IShareDetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from i_share_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from i_share_detail
    where share_detail_id = #{shareDetailId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from i_share_detail
    where share_detail_id = #{shareDetailId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.zucc.web.entity.IShareDetailExample" >
    delete from i_share_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.zucc.web.entity.IShareDetail" >
    insert into i_share_detail (share_detail_id, share_useId, share_courseId, 
      share_enroll_id, share_createTime, share_money_state
      )
    values (#{shareDetailId,jdbcType=BIGINT}, #{shareUseid,jdbcType=BIGINT}, #{shareCourseid,jdbcType=BIGINT}, 
      #{shareEnrollId,jdbcType=BIGINT}, #{shareCreatetime,jdbcType=TIMESTAMP}, #{shareMoneyState,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.zucc.web.entity.IShareDetail" >
    insert into i_share_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="shareDetailId != null" >
        share_detail_id,
      </if>
      <if test="shareUseid != null" >
        share_useId,
      </if>
      <if test="shareCourseid != null" >
        share_courseId,
      </if>
      <if test="shareEnrollId != null" >
        share_enroll_id,
      </if>
      <if test="shareCreatetime != null" >
        share_createTime,
      </if>
      <if test="shareMoneyState != null" >
        share_money_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="shareDetailId != null" >
        #{shareDetailId,jdbcType=BIGINT},
      </if>
      <if test="shareUseid != null" >
        #{shareUseid,jdbcType=BIGINT},
      </if>
      <if test="shareCourseid != null" >
        #{shareCourseid,jdbcType=BIGINT},
      </if>
      <if test="shareEnrollId != null" >
        #{shareEnrollId,jdbcType=BIGINT},
      </if>
      <if test="shareCreatetime != null" >
        #{shareCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="shareMoneyState != null" >
        #{shareMoneyState,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.zucc.web.entity.IShareDetailExample" resultType="java.lang.Integer" >
    select count(*) from i_share_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update i_share_detail
    <set >
      <if test="record.shareDetailId != null" >
        share_detail_id = #{record.shareDetailId,jdbcType=BIGINT},
      </if>
      <if test="record.shareUseid != null" >
        share_useId = #{record.shareUseid,jdbcType=BIGINT},
      </if>
      <if test="record.shareCourseid != null" >
        share_courseId = #{record.shareCourseid,jdbcType=BIGINT},
      </if>
      <if test="record.shareEnrollId != null" >
        share_enroll_id = #{record.shareEnrollId,jdbcType=BIGINT},
      </if>
      <if test="record.shareCreatetime != null" >
        share_createTime = #{record.shareCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shareMoneyState != null" >
        share_money_state = #{record.shareMoneyState,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update i_share_detail
    set share_detail_id = #{record.shareDetailId,jdbcType=BIGINT},
      share_useId = #{record.shareUseid,jdbcType=BIGINT},
      share_courseId = #{record.shareCourseid,jdbcType=BIGINT},
      share_enroll_id = #{record.shareEnrollId,jdbcType=BIGINT},
      share_createTime = #{record.shareCreatetime,jdbcType=TIMESTAMP},
      share_money_state = #{record.shareMoneyState,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.zucc.web.entity.IShareDetail" >
    update i_share_detail
    <set >
      <if test="shareUseid != null" >
        share_useId = #{shareUseid,jdbcType=BIGINT},
      </if>
      <if test="shareCourseid != null" >
        share_courseId = #{shareCourseid,jdbcType=BIGINT},
      </if>
      <if test="shareEnrollId != null" >
        share_enroll_id = #{shareEnrollId,jdbcType=BIGINT},
      </if>
      <if test="shareCreatetime != null" >
        share_createTime = #{shareCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="shareMoneyState != null" >
        share_money_state = #{shareMoneyState,jdbcType=BIT},
      </if>
    </set>
    where share_detail_id = #{shareDetailId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.zucc.web.entity.IShareDetail" >
    update i_share_detail
    set share_useId = #{shareUseid,jdbcType=BIGINT},
      share_courseId = #{shareCourseid,jdbcType=BIGINT},
      share_enroll_id = #{shareEnrollId,jdbcType=BIGINT},
      share_createTime = #{shareCreatetime,jdbcType=TIMESTAMP},
      share_money_state = #{shareMoneyState,jdbcType=BIT}
    where share_detail_id = #{shareDetailId,jdbcType=BIGINT}
  </update>
</mapper>