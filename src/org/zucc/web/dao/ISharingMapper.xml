<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.zucc.web.dao.ISharingMapper" >
  <resultMap id="BaseResultMap" type="org.zucc.web.entity.ISharing" >
    <id column="sid" property="sid" jdbcType="BIGINT" />
    <result column="s_userId" property="sUserid" jdbcType="BIGINT" />
    <result column="s_courseId" property="sCourseid" jdbcType="BIGINT" />
    <result column="s_createTime" property="sCreatetime" jdbcType="TIMESTAMP" />
    <result column="s_url" property="sUrl" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    sid, s_userId, s_courseId, s_createTime, s_url
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.zucc.web.entity.ISharingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from i_sharing
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from i_sharing
    where sid = #{sid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from i_sharing
    where sid = #{sid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.zucc.web.entity.ISharingExample" >
    delete from i_sharing
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.zucc.web.entity.ISharing" >
    insert into i_sharing (sid, s_userId, s_courseId, 
      s_createTime, s_url)
    values (#{sid,jdbcType=BIGINT}, #{sUserid,jdbcType=BIGINT}, #{sCourseid,jdbcType=BIGINT}, 
      #{sCreatetime,jdbcType=TIMESTAMP}, #{sUrl,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.zucc.web.entity.ISharing" >
    insert into i_sharing
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sid != null" >
        sid,
      </if>
      <if test="sUserid != null" >
        s_userId,
      </if>
      <if test="sCourseid != null" >
        s_courseId,
      </if>
      <if test="sCreatetime != null" >
        s_createTime,
      </if>
      <if test="sUrl != null" >
        s_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sid != null" >
        #{sid,jdbcType=BIGINT},
      </if>
      <if test="sUserid != null" >
        #{sUserid,jdbcType=BIGINT},
      </if>
      <if test="sCourseid != null" >
        #{sCourseid,jdbcType=BIGINT},
      </if>
      <if test="sCreatetime != null" >
        #{sCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="sUrl != null" >
        #{sUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.zucc.web.entity.ISharingExample" resultType="java.lang.Integer" >
    select count(*) from i_sharing
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update i_sharing
    <set >
      <if test="record.sid != null" >
        sid = #{record.sid,jdbcType=BIGINT},
      </if>
      <if test="record.sUserid != null" >
        s_userId = #{record.sUserid,jdbcType=BIGINT},
      </if>
      <if test="record.sCourseid != null" >
        s_courseId = #{record.sCourseid,jdbcType=BIGINT},
      </if>
      <if test="record.sCreatetime != null" >
        s_createTime = #{record.sCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sUrl != null" >
        s_url = #{record.sUrl,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update i_sharing
    set sid = #{record.sid,jdbcType=BIGINT},
      s_userId = #{record.sUserid,jdbcType=BIGINT},
      s_courseId = #{record.sCourseid,jdbcType=BIGINT},
      s_createTime = #{record.sCreatetime,jdbcType=TIMESTAMP},
      s_url = #{record.sUrl,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.zucc.web.entity.ISharing" >
    update i_sharing
    <set >
      <if test="sUserid != null" >
        s_userId = #{sUserid,jdbcType=BIGINT},
      </if>
      <if test="sCourseid != null" >
        s_courseId = #{sCourseid,jdbcType=BIGINT},
      </if>
      <if test="sCreatetime != null" >
        s_createTime = #{sCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="sUrl != null" >
        s_url = #{sUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where sid = #{sid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.zucc.web.entity.ISharing" >
    update i_sharing
    set s_userId = #{sUserid,jdbcType=BIGINT},
      s_courseId = #{sCourseid,jdbcType=BIGINT},
      s_createTime = #{sCreatetime,jdbcType=TIMESTAMP},
      s_url = #{sUrl,jdbcType=VARCHAR}
    where sid = #{sid,jdbcType=BIGINT}
  </update>
</mapper>