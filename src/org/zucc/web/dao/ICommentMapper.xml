<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.zucc.web.dao.ICommentMapper" >
  <resultMap id="BaseResultMap" type="org.zucc.web.entity.IComment" >
    <id column="commentId" property="commentid" jdbcType="BIGINT" />
    <result column="comment_courseId" property="commentCourseid" jdbcType="BIGINT" />
    <result column="comment_userId" property="commentUserid" jdbcType="BIGINT" />
    <result column="comment_description" property="commentDescription" jdbcType="VARCHAR" />
    <result column="comment_createTime" property="commentCreatetime" jdbcType="TIMESTAMP" />
    <result column="comment_course_score" property="commentCourseScore" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    commentId, comment_courseId, comment_userId, comment_description, comment_createTime, 
    comment_course_score
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.zucc.web.entity.ICommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from i_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from i_comment
    where commentId = #{commentid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from i_comment
    where commentId = #{commentid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.zucc.web.entity.ICommentExample" >
    delete from i_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.zucc.web.entity.IComment" >
    insert into i_comment (commentId, comment_courseId, comment_userId, 
      comment_description, comment_createTime, 
      comment_course_score)
    values (#{commentid,jdbcType=BIGINT}, #{commentCourseid,jdbcType=BIGINT}, #{commentUserid,jdbcType=BIGINT}, 
      #{commentDescription,jdbcType=VARCHAR}, #{commentCreatetime,jdbcType=TIMESTAMP}, 
      #{commentCourseScore,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.zucc.web.entity.IComment" >
    insert into i_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commentid != null" >
        commentId,
      </if>
      <if test="commentCourseid != null" >
        comment_courseId,
      </if>
      <if test="commentUserid != null" >
        comment_userId,
      </if>
      <if test="commentDescription != null" >
        comment_description,
      </if>
      <if test="commentCreatetime != null" >
        comment_createTime,
      </if>
      <if test="commentCourseScore != null" >
        comment_course_score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commentid != null" >
        #{commentid,jdbcType=BIGINT},
      </if>
      <if test="commentCourseid != null" >
        #{commentCourseid,jdbcType=BIGINT},
      </if>
      <if test="commentUserid != null" >
        #{commentUserid,jdbcType=BIGINT},
      </if>
      <if test="commentDescription != null" >
        #{commentDescription,jdbcType=VARCHAR},
      </if>
      <if test="commentCreatetime != null" >
        #{commentCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentCourseScore != null" >
        #{commentCourseScore,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.zucc.web.entity.ICommentExample" resultType="java.lang.Integer" >
    select count(*) from i_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update i_comment
    <set >
      <if test="record.commentid != null" >
        commentId = #{record.commentid,jdbcType=BIGINT},
      </if>
      <if test="record.commentCourseid != null" >
        comment_courseId = #{record.commentCourseid,jdbcType=BIGINT},
      </if>
      <if test="record.commentUserid != null" >
        comment_userId = #{record.commentUserid,jdbcType=BIGINT},
      </if>
      <if test="record.commentDescription != null" >
        comment_description = #{record.commentDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.commentCreatetime != null" >
        comment_createTime = #{record.commentCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commentCourseScore != null" >
        comment_course_score = #{record.commentCourseScore,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update i_comment
    set commentId = #{record.commentid,jdbcType=BIGINT},
      comment_courseId = #{record.commentCourseid,jdbcType=BIGINT},
      comment_userId = #{record.commentUserid,jdbcType=BIGINT},
      comment_description = #{record.commentDescription,jdbcType=VARCHAR},
      comment_createTime = #{record.commentCreatetime,jdbcType=TIMESTAMP},
      comment_course_score = #{record.commentCourseScore,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.zucc.web.entity.IComment" >
    update i_comment
    <set >
      <if test="commentCourseid != null" >
        comment_courseId = #{commentCourseid,jdbcType=BIGINT},
      </if>
      <if test="commentUserid != null" >
        comment_userId = #{commentUserid,jdbcType=BIGINT},
      </if>
      <if test="commentDescription != null" >
        comment_description = #{commentDescription,jdbcType=VARCHAR},
      </if>
      <if test="commentCreatetime != null" >
        comment_createTime = #{commentCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentCourseScore != null" >
        comment_course_score = #{commentCourseScore,jdbcType=INTEGER},
      </if>
    </set>
    where commentId = #{commentid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.zucc.web.entity.IComment" >
    update i_comment
    set comment_courseId = #{commentCourseid,jdbcType=BIGINT},
      comment_userId = #{commentUserid,jdbcType=BIGINT},
      comment_description = #{commentDescription,jdbcType=VARCHAR},
      comment_createTime = #{commentCreatetime,jdbcType=TIMESTAMP},
      comment_course_score = #{commentCourseScore,jdbcType=INTEGER}
    where commentId = #{commentid,jdbcType=BIGINT}
  </update>
</mapper>