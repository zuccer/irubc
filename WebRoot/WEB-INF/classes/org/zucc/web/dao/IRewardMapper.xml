<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.zucc.web.dao.IRewardMapper" >
  <resultMap id="BaseResultMap" type="org.zucc.web.entity.IReward" >
    <id column="rid" property="rid" jdbcType="BIGINT" />
    <result column="r_teacherId" property="rTeacherid" jdbcType="BIGINT" />
    <result column="r_courseId" property="rCourseid" jdbcType="BIGINT" />
    <result column="r_state" property="rState" jdbcType="BIT" />
    <result column="r_money" property="rMoney" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    rid, r_teacherId, r_courseId, r_state, r_money
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.zucc.web.entity.IRewardExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from i_reward
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from i_reward
    where rid = #{rid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from i_reward
    where rid = #{rid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.zucc.web.entity.IRewardExample" >
    delete from i_reward
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.zucc.web.entity.IReward" >
    insert into i_reward (rid, r_teacherId, r_courseId, 
      r_state, r_money)
    values (#{rid,jdbcType=BIGINT}, #{rTeacherid,jdbcType=BIGINT}, #{rCourseid,jdbcType=BIGINT}, 
      #{rState,jdbcType=BIT}, #{rMoney,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="org.zucc.web.entity.IReward" >
    insert into i_reward
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rid != null" >
        rid,
      </if>
      <if test="rTeacherid != null" >
        r_teacherId,
      </if>
      <if test="rCourseid != null" >
        r_courseId,
      </if>
      <if test="rState != null" >
        r_state,
      </if>
      <if test="rMoney != null" >
        r_money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rid != null" >
        #{rid,jdbcType=BIGINT},
      </if>
      <if test="rTeacherid != null" >
        #{rTeacherid,jdbcType=BIGINT},
      </if>
      <if test="rCourseid != null" >
        #{rCourseid,jdbcType=BIGINT},
      </if>
      <if test="rState != null" >
        #{rState,jdbcType=BIT},
      </if>
      <if test="rMoney != null" >
        #{rMoney,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.zucc.web.entity.IRewardExample" resultType="java.lang.Integer" >
    select count(*) from i_reward
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update i_reward
    <set >
      <if test="record.rid != null" >
        rid = #{record.rid,jdbcType=BIGINT},
      </if>
      <if test="record.rTeacherid != null" >
        r_teacherId = #{record.rTeacherid,jdbcType=BIGINT},
      </if>
      <if test="record.rCourseid != null" >
        r_courseId = #{record.rCourseid,jdbcType=BIGINT},
      </if>
      <if test="record.rState != null" >
        r_state = #{record.rState,jdbcType=BIT},
      </if>
      <if test="record.rMoney != null" >
        r_money = #{record.rMoney,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update i_reward
    set rid = #{record.rid,jdbcType=BIGINT},
      r_teacherId = #{record.rTeacherid,jdbcType=BIGINT},
      r_courseId = #{record.rCourseid,jdbcType=BIGINT},
      r_state = #{record.rState,jdbcType=BIT},
      r_money = #{record.rMoney,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.zucc.web.entity.IReward" >
    update i_reward
    <set >
      <if test="rTeacherid != null" >
        r_teacherId = #{rTeacherid,jdbcType=BIGINT},
      </if>
      <if test="rCourseid != null" >
        r_courseId = #{rCourseid,jdbcType=BIGINT},
      </if>
      <if test="rState != null" >
        r_state = #{rState,jdbcType=BIT},
      </if>
      <if test="rMoney != null" >
        r_money = #{rMoney,jdbcType=DOUBLE},
      </if>
    </set>
    where rid = #{rid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.zucc.web.entity.IReward" >
    update i_reward
    set r_teacherId = #{rTeacherid,jdbcType=BIGINT},
      r_courseId = #{rCourseid,jdbcType=BIGINT},
      r_state = #{rState,jdbcType=BIT},
      r_money = #{rMoney,jdbcType=DOUBLE}
    where rid = #{rid,jdbcType=BIGINT}
  </update>
</mapper>